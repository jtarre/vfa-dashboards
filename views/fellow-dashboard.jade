extends layout

	// left nav
	div(class="col-md-6")
	
	// stats
	// what if for each of these
	// we could do it programmatically? 
	// doesn't really matter. job done is important

	// 2012 fellows count
	// 2013 fellows count
	// 2014 fellows count
	// 2015 fellows count
	// 2016 fellows count
	// for each key, value in fellowCountPerYear
		//p #{key} Fellows: #{value}

	// filters and navs 
		// filter by year
			// need picklist of fellow year values
			// could also do manual because so few
		//select#fellowClassYears.chosen-select(multiple="true")
			//for each key, value in fellowClassYears
				//option(value=value id=key) #{value}
		
		// filter by city
			// need picklist of city values
			// need to get these values on first call
			// to fellow dashboard
		//select#vfaCities.chosen-select(multiple="true")
			//for each key, value in vfaCities
				//option(value=value id=key) #{value}


	// so how can i separate this middle newsfeed into a separate view
	// that i can avoid having to re-render filters each time
	// i click a filter change
	// i would need to render 
	// goes back to the includes. 
	// then let's say i add a filter and re-render the dashboard
	// will i lose the fellow i've clicked on? 
	// i'd like that to persist too
	// have to account for a handful of states
	// hmmm do i have to pass in fellow variable too?
	// beginning to look a lot like the old vfa match
	// variables to pass in
	// filters, selected filters, list of (filtered) fellows, selected Fellows
	// that's not terrible	 
	// how do I know which Fellow is selected?

	// middle newsfeed
	div(class="col-md-3")
		// pull in fellow data into here
		for each key, value in fellows
			// layout table rows 
			p(id=value.fellowId) - #{value.name} #{value.city} #{value.company}
			button#fellowInfo(type="button" class="btn btn-info" id=value.fellowId) See More / Log Notes
	// right detail panel
	div(class="col-md-3")
	// see more
	//div#renderFellowPanel
	//div#fellowId(value=id)
	// the div fellow id would be how i store fellow variable. hacky
	script.
		// chosen select multi-select 
	script.
		// You clicked on See More
		$("#fellowInfo").click( function(e) {
			// grab id
			var id = $(this).attr("id");
			// post fellow-data v2 to get info
			// what to do about activities, cases, etc. 
			// need to build the box
		})
	script.
		// You clicked on a city filter (might be changed)
		/*
		$("#vfaCities").change( function (e) {
			// get the fellow dashboard
			// i guess with jquery we're going to update each time
			// long term game plan, angular
			var vfaCitiesToFilterOn = $(this).find("option:selected").val();
			// above line should be an *array* of values 
			// if multiple options selected

			// also need to get any year filters
			/*
			var fellowClassYearsToFilterOn;
			if ($(#fellowClassYears).find("option:selected").val() !== null) {
				// grab the values
				fellowClassYearsToFilterOn = $(#fellowClassYears).find("option:selected").val();
			}
			*/

			// send both possible filters to the server
			$.get("fellow-dashboard",
			{
				vfaCitiesToFilterOn        : vfaCitiesToFilterOn, 
				//fellowClassYearsToFilterOn : fellowClassYearsToFilterOn,
				//fellowToSeeMore            : fellowtoSeeMore
			});
			// don't think i'll need a done method if i'm 
			// sending back a rendered template
			// we'll see
			// i may still need the done (if it's available)
			// to select the filters
			//.done( function (data) {
				// i need to make sure the filters persist on the rerender
			//});
		});
		*/
	script.
		// when fellow year changes
		$('#fellowClassYears').change( function(e) {
			// call and render
		})












